<?php
/**
 * @file
 * Handle install / uninstall / update events for the module.
 */

function ahd_custom_update_8001(){
  //Banner Management Textfields
  _ahd_custom_change_text_field_max_length('block_content', 'field_title', 2000);

  //Grid Management Textfields
  _ahd_custom_change_text_field_max_length('block_content', 'field_grid_module_title', 2000);

  //FAQ Component TextFields
  _ahd_custom_change_text_field_max_length('block_content', 'field_bottom', 2000);
  _ahd_custom_change_text_field_max_length('block_content', 'field_faqcta_label', 2000);
  _ahd_custom_change_text_field_max_length('block_content', 'field_faqcta_link', 2000);
  _ahd_custom_change_text_field_max_length('block_content', 'field_headline', 2000);

  //Insight Feed TextFields
  _ahd_custom_change_text_field_max_length('block_content', 'field_ai_ah_header_text', 2000);
  _ahd_custom_change_text_field_max_length('block_content', 'field_ai_ah_sub_header', 2000);

  //Horizontal Module TextFields
  _ahd_custom_change_text_field_max_length('block_content', 'field_hztitle', 2000);

}

/**
 * Change file default upload location to private.
 */
function ahd_custom_update_8002(){
  if (!$field_storage_configs = \Drupal::entityManager()->getStorage('field_storage_config')->loadByProperties(array('type' => 'file'))) {
    return;
  }

  $field_storage = $field_storage_configs['media.field_document'];
  if (!$field_storage) {
    return;
  }
  // Since the usual workflow for field storages do not allow changing the
  // field type, we have to work around it in this case.
  $new_field_storage = $field_storage->toArray();
  $new_field_storage['settings']['uri_scheme'] = 'private';

  $new_field_storage = Drupal\field\Entity\FieldStorageConfig::create($new_field_storage);
  $new_field_storage->original = $new_field_storage;
  $new_field_storage->enforceIsNew(FALSE);

  $new_field_storage->save();
}

/**
 * Update the length of a text field which already contains data.
 *
 * @param string $entity_type_id
 * @param string $field_name
 * @param integer $new_length
 */
function _ahd_custom_change_text_field_max_length($entity_type_id, $field_name, $new_length) {
  $name = 'field.storage.' . $entity_type_id . "." . $field_name;

  // Get the current settings
  $result = \Drupal::database()->query(
    'SELECT data FROM {config} WHERE name = :name',
    [':name' => $name]
  )->fetchField();
  $data = unserialize($result);
  if(!empty($data)){
    $data['settings']['max_length'] = $new_length;

    // Write settings back to the database.
    \Drupal::database()->update('config')
      ->fields(['data' => serialize($data)])
      ->condition('name', $name)
      ->execute();

    // Update the value column in both the _data and _revision tables for the field
    $table = $entity_type_id . "__" . $field_name;
    $table_revision = $entity_type_id . "_revision__" . $field_name;
    $new_field = ['type' => 'varchar', 'length' => $new_length];
    $col_name = $field_name . '_value';
    \Drupal::database()->schema()->changeField($table, $col_name, $col_name, $new_field);
    \Drupal::database()->schema()->changeField($table_revision, $col_name, $col_name, $new_field);

    // Flush the caches.
    drupal_flush_all_caches();
  }
}
